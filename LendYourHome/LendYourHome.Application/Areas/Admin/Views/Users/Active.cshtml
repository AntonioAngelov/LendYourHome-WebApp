@using LendYourHome.Application.Areas.Admin.Models.Users
@using LendYourHome.Common.Constants
@using LendYourHome.Data.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@model LendYourHome.Application.Areas.Admin.Models.Users.ActiveUsersViewModel

@{
    ViewData["Title"] = "Active Users";
}

@{
    int i = 1;
    var previousPageDisabled = Model.PageListingData.CurrentPage == 1 ? "disabled" : string.Empty;
    var nextPageDisabled = Model.PageListingData.CurrentPage == Model.PageListingData.TotalPages || Model.PageListingData.TotalPages == 0 ? "disabled" : string.Empty;
}



<div class="wrapper">
    <h2 class="text-center page-header">@ViewData["Title"]</h2>
    <div class="table-responsive">
        <table class="table table-hover table-bordered table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActiveUsers.FirstOrDefault().UserName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActiveUsers.FirstOrDefault().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActiveUsers.FirstOrDefault().Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActiveUsers.FirstOrDefault().IsHost)
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.ActiveUsers)
            {
                    <tr>
                        <td>@(i++)</td>
                        <td>
                            @Html.DisplayFor(modelItem => user.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => user.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => user.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => user.IsHost)
                        </td>
                        <td>
                            <form asp-action="Ban" class="row">
                                <input type="hidden" name="UserId" value="@user.Id" />
                                <input type="hidden" name="UserName" value="@user.UserName" />
                                <div class="form-group col-md-8">
                                    <input type="date" name="BanEndDate" class="form-control" />
                                </div>
                                <div class="form-group centered col-md-3">
                                    <input id="create-home-btn" type="submit" value="Ban User" class="btn btn-danger" />
                                </div>
                            </form>
                            @if (!UserManager.IsInRoleAsync(UserManager.FindByIdAsync(user.Id).Result, ApplicationConstants.AdminRole).Result)
                            {
                                <form asp-action="MakeAdmin" class="row">
                                    <div class="col-md-9"></div>
                                    <input type="hidden" name="UserId" value="@user.Id" />
                                    <input type="hidden" name="UserName" value="@user.UserName" />
                                    <div class="form-group centered col-md-3">
                                        <input id="create-home-btn" type="submit" value="Make Admin" class="btn btn-warning" />
                                    </div>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="..." class="centered-container">
        <ul class="pagination pagination-lg">
            <li class="page-item @previousPageDisabled">
                <a class="page-link" href="/admin/users/active?page=@Model.PageListingData.PreviousPage" tabindex="-1">Previous</a>
            </li>
            @for (int p = 1; p <= Model.PageListingData.TotalPages; p++)
            {
                <li class="page-item @(p == Model.PageListingData.CurrentPage ? "active" : string.Empty)"><a class="page-link" href="/admin/users/active?page=@p">@p</a></li>
            }
            <li class="page-item @nextPageDisabled">
                <a class="page-link" href="/admin/users/active?page=@Model.PageListingData.NextPage">Next</a>
            </li>
        </ul>
    </nav>

</div>
